swagger: "2.0"
info:
  version: "0.0.1"
  title: Arts Impact Wales Prototype
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /api
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /projects/{id}:
    x-swagger-router-controller: projects.controller
    get:
      operationId: getProject
      description: Get a single project
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/getSingleProject"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: updateProject
      description: Update a project
      # define the parameters
      parameters:
        - name: id
          description: project id
          type: string
          in: path
          required: true
        - name: name
          description: Organisation properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Organisation"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteProject
      description: Delete an organisation. Doesn't permanently delete it from the database; however, it will no longer be accessible via the api
      # define the parameters
      parameters:
        - name: id
          description: Organisation id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /projects:
    # our controller name
    x-swagger-router-controller: project.controller
    get:
      operationId: getProjects
      description: Get a list of all projects
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Project"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: saveProject
      description: Add a new project
      parameters:
        - name: name
          description: Project name
          in: body
          required: true
          schema:
            $ref: "#/definitions/Project"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /organisations/{id}:
    # our controller name
    x-swagger-router-controller: organisations.controller
    get:
      operationId: getOrganisation
      description: Get a single organisation
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/getSingleOrganisation"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: updateOrganisation
      description: Update an organisation
      # define the parameters
      parameters:
        - name: id
          description: Organisation id
          type: string
          in: path
          required: true
        - name: name
          description: Organisation properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Organisation"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteOrganisation
      description: Delete an organisation. Doesn't permanently delete it from the database; however, it will no longer be accessible via the api
      # define the parameters
      parameters:
        - name: id
          description: Organisation id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /organisations:
    # our controller name
    x-swagger-router-controller: organisations.controller
    get:
      operationId: getOrganisations
      description: Get a list of all organisations
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/getOrganisations"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: saveOrganisation
      description: Add a new organisation
      # movie info to be stored
      parameters:
        - name: name
          description: Organisation name
          in: body
          required: true
          schema:
            $ref: "#/definitions/Organisation"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  getSingleOrganisation:
    type: object
    allOf:
      - $ref: '#/definitions/Organisation'
  getOrganisations:
    type: object
    allOf:
      - $ref: '#/definitions/Organisation'
  getProjects:
    type: object
    allOf:
      - $ref: '#/definitions/Project'
  getSingleProject:
    type: object
    allOf:
      - $ref: '#/definitions/Project'
  Project:
    type: object
    discriminator: name
    properties:
      id:
        type: string
        description: ID of the project
      name:
        type: string
        description: Name of the project
      cost:
        type: string
        description: Cost of the project in GBP (banded)
        default: '0-1000'
        enum:
          - '0-1000'
          - '1000-5000'
          - '5000-15000'
      dateAdded:
        type: string
        description: Date that the project was added to Arts Impact Wales in ISO-8601 format
      duration:
        type: number
        description: Number of hours the project open to participation.
      startDate:
        type: string
        description: Date the the project started, ISO-8601 format
      endDate:
        type: string
        description: Date the project ended, ISO-8601 format
      primaryPostcode:
        type: string
        description: Most relevant postcode for the project. Can be either a full postcode (e.g. CF24 1JN) or a partial postcode (e.g. CF24)
      additionalPostcodes:
        description: Additional postcodes for the project.
        type: array
        items:
          type: string
      cohortYoungest:
        type: integer
        description: Optional age of the youngest member of the group, in whole years. Only relevant if uploading cohort (rather than participant) figures.
      cohortEldest:
        type: integer
        description: Optional age of the eldest member of the group, in whole years. Only relevant if uploading cohort (rather than participant) figures.
      cohortMale:
        type: number
        description: Number of male participants in the cohort
      cohortFemale:
        type: number
        description: Number of female participants in the cohort
      targetYoungest:
        type: integer
        description: Youngest age that the project is targetting, in whole years.
      targetEldest:
        type: integer
        description: Oldest age that the project is targetting, in whole years.
      cohortOrIndividual:
        type: string
        description: Whether this project's results should be measured on a cohort basis (i.e. single summary figures) or an participant basis (i.e. a statistical summary of participant results)
      attachments:
        type: array
        items:
          type: string
      participantCount:
        type: integer
        description: Number of participants in a project. Only relevant if uploading cohort (rather than participant) figures.
      objectives:
        type: array
        description: Objectives for the project. 
        maxItems: 3
        items:
          $ref: '#/definitions/Objective'
      scores:
        type: array
        description: Scores against each objective. Entered directly when there is a cohort, or calculated from individual participant data, where available.
        maxItems: 3
        items:
          type: number
      participants:
        type: array
        description: Project participants
        items:
          $ref: '#/definitions/Participant'      
      partnerOrganisations:
        type: array
        description: Partner organisations for this project
        items:
          type: string
          description: ID of the partner organisation
  Participant:
    type: object
    properties:
      internalId:
        type: string
        description: Optional internal (within an arts organisation) ID for the participant
      gender:
        type: string
        description: Participant gender
      age:
        type: integer
        description: Participant age
      scores:
        type: array
        description: Scores against each objective
        maxItems: 3
        items:
          type: integer      
  Objective:
    type: object
    discriminator: id
    properties:
      id:
        type: string
        description: ID of the objective
      description:
        type: string
        description: Description of the objective
  Organisation:
    type: object
    discriminator: name
    properties:
      id:
        type: string
        description: ID of the organisation
      name:
        type: string
        description: Name of the organisation
      organisationType:
        type: string
        description: Type of the orgasniation, e.g. Arts Organisation, Health Board, Government Department etc.
        enum:
          - Arts Organisation
          - Health Board
          - Government Department
      dateAdded:
        type: string
        description: Date that the organisation was added to Arts Impact Wales
      contact:
        type: object
        properties:
          name:
            type: string
            description: Name of the organisation
          email:
            type: string
          phone:
            type: string
          postcode:
            type: string
    required:
      - id
      - name
      - organisationType
      - dateAdded
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
